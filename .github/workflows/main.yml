on:
    push:
        branches: ['**']
    release:
        types: [created]

jobs:
    test:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - uses: actions/setup-node@v3
              with:
                  node-version: 'lts/*'

            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - run: npm ci

            - name: Run eslint
              run: npm run lint

            - name: Run stylelint
              run: npm run lint:css

            - name: Run type check
              run: npm run tsc:check

            - name: Run unit tests
              run: npm run test:coverage

            - uses: actions/upload-artifact@v3
              with:
                  name: coverage
                  path: coverage
                  retention-days: 7

    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - uses: actions/checkout@v3

            - name: Cache node modules
              uses: actions/cache@v3
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - run: npm ci

            - run: npm run build

            - uses: actions/upload-artifact@v3
              with:
                  name: dist
                  path: dist

    deploy:
        runs-on: ubuntu-latest
        needs: build
        if: github.event_name == 'release' && github.event.action == 'created'
        environment:
            name: Production
        steps:
            - uses: actions/checkout@v3

            - run: echo "deploy"
